{"ast":null,"code":"import { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction RecipeEditComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵelement(2, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelement(4, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 20)(6, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RecipeEditComponent_div_32_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeleteIngredient());\n    });\n    i0.ɵɵtext(7, \"X\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\n\nexport let RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, recipeService, router) {\n      this.route = route;\n      this.recipeService = recipeService;\n      this.router = router;\n      this.editMode = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n      });\n    }\n\n    initForm() {\n      let recipeName = '';\n      let recipeImagePath = '';\n      let recipeDescription = '';\n      let recipeIngredients = new FormArray([]);\n\n      if (this.editMode) {\n        const recipe = this.recipeService.getRecipe(this.id);\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n\n        if (recipe[\"ingredients\"]) {\n          for (let ingredient of recipe.ingredients) {\n            recipeIngredients.push(new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/'^[1-9]+[0-9]*$'/)])\n            }));\n          }\n        }\n      }\n\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'imagePath': new FormControl(recipeImagePath, Validators.required),\n        'description': new FormControl(recipeDescription, Validators.required),\n        'ingredients': recipeIngredients\n      });\n    }\n\n    onSubmit() {\n      // const newRecipe = new Recipe(this.recipeForm.value['name'],\n      //                              this.recipeForm.value['description'],\n      //                               this.recipeForm.value['imagePath'],\n      //                              this.recipeForm.value['ingredients']);\n      if (this.editMode) {\n        this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.recipeService.addRecipe(this.recipeForm.value);\n      }\n\n      this.onCancel();\n    }\n\n    get controls() {\n      return this.recipeForm.get('ingredients').controls;\n    }\n\n    onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/'^[1-9]+[0-9]*$'/)])\n      }));\n    }\n\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n\n    onDeleteIngredient(index) {\n      this.recipeForm.get('ingredients').removeAt(index);\n    }\n\n  }\n\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 37,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imagePath\"], [\"type\", \"text\", \"id\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"imagePath\", \"\"], [1, \"img-responsive\", 3, \"src\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"6\", 1, \"form-control\"], [\"formArrayName\", \"ingredients\", 1, \"col-xs-12\"], [\"class\", \"row\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col-xs-8\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn-danger\", 3, \"click\"]],\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_6_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(7, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 0)(9, \"div\", 1)(10, \"div\", 5)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 0)(15, \"div\", 1)(16, \"div\", 5)(17, \"label\", 8);\n        i0.ɵɵtext(18, \"Imagepath\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9, 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 0)(22, \"div\", 1);\n        i0.ɵɵelement(23, \"img\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 1)(26, \"div\", 5)(27, \"label\", 12);\n        i0.ɵɵtext(28, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"textarea\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 0)(31, \"div\", 14);\n        i0.ɵɵtemplate(32, RecipeEditComponent_div_32_Template, 8, 1, \"div\", 15);\n        i0.ɵɵelementStart(33, \"div\", 0)(34, \"div\", 1)(35, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_35_listener() {\n          return ctx.onAddIngredient();\n        });\n        i0.ɵɵtext(36, \"Add Ingredient\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(20);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.controls);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormGroupName, i4.FormArrayName]\n  });\n  return RecipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}